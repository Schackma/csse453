'''
Created on Mar 15, 2016

@author: schackma
'''

from numpy.random import choice

class AS_Ant(object):
    '''
    classdocs
    '''


    def __init__(self, cities, start_city, alpha, beta):
        '''
        Constructor
        '''
        self.city = start_city
        self.needToVist = cities
        self.finalCity = start_city
        self.path = [start_city.name]
        self.alpha = alpha
        self.beta = beta
        self.complete = False
        
    def travel(self):
        
        
        if self.needToVist == []:
            for neighbor in self.city.neighbors:
                if neighbor[0] == self.finalCity.name:
                    self.path.append(self.finalCity)
                    self.city = self.finalCity
                    self.complete = True
                    return True
            return False
                    
        
        choices = []
        probabilities = []
        total = 0
        for neighborTuple in self.city.neighbors:
            [neighbor, dist, pher] = neighborTuple
            if neighbor in self.needToVist:
                choices.append(neighbor)
                probabilities.apped(pher ^ self.alpha * (1 / dist) ^ self.beta)
                total += pher ^ self.alpha * (1 / dist) ^ self.beta
        
        if total == 0:
            return False
        
        nextCity = choice(choices, [prob / total for prob in probabilities])
        self.needToVist.remove(nextCity)
        self.path.append(nextCity)
        self.city = nextCity
        
                
        return True
    

